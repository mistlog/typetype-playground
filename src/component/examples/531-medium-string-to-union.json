{"code":"/**\r\n * ref:\r\n * - https://github.com/type-challenges/type-challenges/blob/master/questions/531-medium-string-to-union/README.md\r\n * - https://github.com/type-challenges/type-challenges/issues/968\r\n */\r\n\r\n/**\r\n * eg.\r\n * \r\n *  checks([\r\n        check<StringToUnion<\"hello\">, \"h\" | \"e\" | \"l\" | \"l\" | \"o\", Test.Pass>(),\r\n    ])\r\n */\r\n \r\nexport type function StringToUnion = (T extends string) => ^{\r\n    if(T extends `${infer char}${infer rest}`) {\r\n        return union [char, StringToUnion<rest>]\r\n    } else {\r\n        return never\r\n    }\r\n}"}