/**
 * ref:
 * - https://github.com/type-challenges/type-challenges/blob/master/questions/531-medium-string-to-union/README.md
 * - https://github.com/type-challenges/type-challenges/issues/968
 */

/**
 * eg.
 * 
 *  checks([
        check<StringToUnion<"hello">, "h" | "e" | "l" | "l" | "o", Test.Pass>(),
    ])
 */
 
export type function StringToUnion = (T extends string) => ^{
    if(T extends `${infer char}${infer rest}`) {
        return union [char, StringToUnion<rest>]
    } else {
        return never
    }
}