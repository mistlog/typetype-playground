{"code":"/**\r\n * ref:\r\n * - https://github.com/type-challenges/type-challenges/blob/master/questions/645-medium-diff/README.md\r\n * - https://github.com/type-challenges/type-challenges/issues/832\r\n */\r\n\r\n/**\r\n * eg.\r\n * \r\n *  type Foo = {\r\n        name: string\r\n        age: string\r\n    }\r\n    \r\n    type Bar = {\r\n        name: string\r\n        age: string\r\n        gender: number\r\n    }\r\n\r\n    checks([\r\n        check<Diff<Foo, Bar>, { gender: number }, Test.Pass>(),\r\n    ])\r\n */\r\n \r\nexport type function Diff = (a, b) => ^{\r\n    for(key in union [keyof a, keyof b]) {\r\n        return {\r\n            key: Exclude<key, combine [keyof a, keyof b]>,\r\n            value: ^{\r\n                if(key extends keyof a) {\r\n                    return a[key]\r\n                } else if(key extends keyof b) {\r\n                    return b[key]\r\n                } else {\r\n                    return never\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"}