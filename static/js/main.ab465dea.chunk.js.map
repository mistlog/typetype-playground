{"version":3,"sources":["component/Header.tsx","component/Editor.tsx","component/ExampleNav.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","classNames","container","mergeStyleSets","backgroundColor","border","padding","boxShadow","color","font","monaco","init","then","languages","typescript","typescriptDefaults","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","catch","error","console","Editor","props","defaultCode","editorRef","useRef","useState","output","setOutput","run","code","current","getValue","result","transform","stack","JSON","stringify","handleEditorDidMount","_","editor","onDidChangeModelContent","debounce","event","options","minimap","enabled","scrollbar","useShadows","width","readOnly","height","display","examples","Map","name","UrlParserExample","ExampleNav","onSelectExample","groups","CreateGroupsFromExamples","get","selected","setSelected","root","marginTop","item","key","find","example","links","forEach","group_name","link","url","isExpanded","map","push","App","exampleCode","setExampleCode","header","main","nav","flexDirection","overflow","isLocalhost","Boolean","window","location","hostname","match","register","config","process","navigator","publicUrl","URL","href","origin","addEventListener","swUrl","checkValidServiceWorker","serviceWorker","ready","log","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","fetch","response","contentType","headers","status","indexOf","unregister","reload","initializeIcons","mergeStyles","selectors","margin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab465dea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { mergeStyleSets } from '@fluentui/merge-styles';\r\n\r\nexport function Header() {\r\n    return (\r\n        <div className={classNames.container}>\r\n            TypeType Playground\r\n        </div>\r\n    )\r\n}\r\n\r\nconst classNames = mergeStyleSets({\r\n    container: {\r\n        backgroundColor: \"#3178c6\",\r\n        border: \"0px\",\r\n        padding: \"10px\",\r\n        boxShadow: \"3px 3px 5px rgba(0, 0, 0, 0.25)\",\r\n        color: \"white\",\r\n        font: `normal 24px -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell,\r\n        \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif`\r\n    }\r\n})","import React, { useRef, useState } from 'react';\r\nimport { mergeStyleSets } from '@fluentui/merge-styles';\r\nimport MonacoEditor from '@monaco-editor/react';\r\nimport { monaco } from '@monaco-editor/react';\r\nimport * as debounce from \"lodash.debounce\";\r\nimport { transform } from \"@mistlog/typetype\";\r\n\r\nmonaco.init()\r\n    .then(monaco => {\r\n\r\n        monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\r\n            noSemanticValidation: true,\r\n            noSyntaxValidation: true\r\n        });\r\n\r\n    })\r\n    .catch(error => console.error('An error occurred during initialization of Monaco: ', error));\r\n\r\nexport interface IEditorProps {\r\n    defaultCode?: string\r\n}\r\nexport function Editor(props: IEditorProps) {\r\n    const { defaultCode } = props;\r\n    const editorRef = useRef<any>();\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    function run() {\r\n        const code = editorRef.current.getValue();\r\n\r\n        try {\r\n            const result = transform(code).code;\r\n            setOutput(result);\r\n        } catch (error) {\r\n            delete error.stack;\r\n            setOutput(JSON.stringify(error, null, 4));\r\n        }\r\n    }\r\n\r\n    function handleEditorDidMount(_, editor) {\r\n        editorRef.current = editor;\r\n        run();\r\n        editorRef.current.onDidChangeModelContent(debounce((event: any) => {\r\n            run();\r\n        }, 1000));\r\n    }\r\n\r\n    const options = {\r\n        minimap: { enabled: false },\r\n        scrollbar: { useShadows: false }\r\n    };\r\n\r\n    return (\r\n        <div className={classNames.container} >\r\n            <MonacoEditor height=\"100%\" width=\"50%\" language=\"typescript\" options={options} editorDidMount={handleEditorDidMount} value={defaultCode} />\r\n            <div style={{ width: \"50%\" }}>\r\n                <MonacoEditor height=\"100%\" width=\"100%\" language=\"typescript\" options={{ ...options, readOnly: true }} value={output} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n */\r\nconst classNames = mergeStyleSets({\r\n    container: {\r\n        height: \"100%\",\r\n        display: \"flex\"\r\n    }\r\n})","import React, { useState } from 'react';\r\nimport { Nav, INavLinkGroup, INavLink } from '@fluentui/react';\r\nimport UrlParserExample from \"./examples/url-parser.json\";\r\n\r\nexport type Examples = Map<string, Array<IExample>>;\r\n\r\nexport interface IExample {\r\n    code: string;\r\n    name: string;\r\n}\r\n\r\nexport interface IExampleNav {\r\n    onSelectExample: (example: IExample) => void;\r\n}\r\n\r\nconst examples = new Map<string, Array<IExample>>([\r\n    [\"Examples\", [\r\n        { name: \"url-parser\", code: UrlParserExample.code },\r\n    ]]\r\n]);\r\n\r\nexport function ExampleNav(props: IExampleNav) {\r\n    const { onSelectExample } = props;\r\n    const groups = CreateGroupsFromExamples(examples);\r\n    const [selected, setSelected] = useState(examples.get(\"Examples\")![0].name);\r\n    return (\r\n        <Nav\r\n            selectedKey={selected}\r\n            groups={groups}\r\n            styles={{ root: { width: 200, marginTop: -20 } }}\r\n            onLinkClick={(_, item) => {\r\n                const name = item!.key;\r\n                if (name) {\r\n                    onSelectExample({ name, code: examples.get(\"Examples\")!.find(example => example.name === name)!.code });\r\n                    setSelected(name);\r\n                }\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n */\r\nfunction CreateGroupsFromExamples(examples: Examples): Array<INavLinkGroup> {\r\n    //\r\n    const links: Array<INavLink> = [];\r\n    examples.forEach((examples, group_name) => {\r\n        const link: INavLink = {\r\n            name: group_name,\r\n            url: \"\",\r\n            isExpanded: true,\r\n            links: examples.map(example => ({ name: example.name, url: \"\", key: example.name }))\r\n        }\r\n\r\n        links.push(link);\r\n    })\r\n\r\n    //\r\n    const groups: Array<INavLinkGroup> = [{ links }];\r\n    return groups;\r\n}\r\n","import React, { useState } from 'react';\nimport { mergeStyleSets } from '@fluentui/merge-styles';\nimport { Header } from './component/Header';\nimport { Editor } from './component/Editor';\nimport { ExampleNav } from './component/ExampleNav';\nimport UrlParserExample from \"./component/examples/url-parser.json\";\n\nexport function App() {\n    const [exampleCode, setExampleCode] = useState(UrlParserExample.code);\n\n    return (\n        <div className={classNames.container}>\n            <div className={classNames.header}>\n                <Header />\n            </div>\n            <div className={classNames.main}>\n                <div className={classNames.nav}>\n                    <ExampleNav onSelectExample={({ name, code }) => {\n                        setExampleCode(code)\n                    }} />\n                </div>\n                <div className={classNames.editor}>\n                    <Editor defaultCode={exampleCode} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst classNames = mergeStyleSets({\n    container: {\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\"\n    },\n    header: {\n        height: \"60px\"\n    },\n    main: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginTop: 16\n    },\n    nav: {\n        height: \"100vh\",\n        marginTop: 16\n    },\n    editor: {\n        height: \"100vh\",\n        width: \"100%\",\n        marginTop: 16\n    }\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { initializeIcons } from '@uifabric/icons';\nimport { mergeStyles } from '@fluentui/merge-styles';\n\ninitializeIcons();\n\n// Inject some global styles\nmergeStyles({\n  selectors: {\n    ':global(body), :global(html), :global(#root)': {\n      margin: 0,\n      padding: 0,\n      height: '100vh',\n      overflow: \"auto\"\n    }\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}